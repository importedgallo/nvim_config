"		nvim config
"		Andre Mongard
"		March 2022

" Defaults
	:set number
	:set autoindent
	":set relativenumber
	:set tabstop=4
	:set shiftwidth=4
	:set smarttab
	:set softtabstop=4
	:set mouse=a
	:set clipboard=unnamedplus
	:set noerrorbells
	:set encoding=UTF-8
	:set wildignore=*/node_modules/*
	:set nowrap
	autocmd FileType * setlocal formatoptions-=c formatoptions-=r formatoptions-=o
	let mapleader = " "



" vim-plug
call plug#begin()


	Plug 'https://github.com/preservim/nerdtree' "Nerd Tree
		Plug 'https://github.com/tiagofumo/vim-nerdtree-syntax-highlight' " syntax highlighting for nvim
	Plug 'https://github.com/tpope/vim-commentary' "For commenting gcc and gc
	Plug 'https://github.com/vim-airline/vim-airline' "Status bar
		Plug 'vim-airline/vim-airline-themes'
	Plug 'https://github.com/ap/vim-css-color' "CSS Colour Preview
	Plug 'https://github.com/rafi/awesome-vim-colorschemes' "Colour Schemes
	Plug 'https://github.com/terryma/vim-multiple-cursors' "<C-n> for multiple cursors
	Plug 'https://github.com/preservim/tagbar' "Tagbar for code navigation
	Plug 'https://github.com/ryanoasis/vim-devicons' "Devicons for vim
	Plug 'https://github.com/neoclide/coc.nvim' "Autocompletion
	Plug 'prettier/vim-prettier', {
				\'do': 'yarn install --frozen-lockfile --production',
				\'branch': 'release/0.x'
				\}
	Plug 'SirVer/ultisnips' " Snippets
	Plug 'honza/vim-snippets' " vim snippets
	Plug 'mlaursen/vim-react-snippets' " ReactJS snippets
	Plug 'glepnir/dashboard-nvim' "Dashboard plugin
	Plug 'nvim-lua/plenary.nvim' " no fucking clue
	Plug 'liuchengxu/vim-clap' " chlamydia
	Plug 'styled-components/vim-styled-components' " react styled components highlighting
	Plug 'iamcco/markdown-preview.nvim', {'do': 'cd app && yarn install' }  " Markdown preview
		if has('nvim') || has('patch-8.0.902')
		  Plug 'mhinz/vim-signify'
		else
		  Plug 'mhinz/vim-signify', { 'branch': 'legacy' }
		endif
	Plug 'christoomey/vim-tmux-navigator' "tmux navigator	
	Plug 'neovim/nvim-lspconfig' " lsp config
	Plug 'akinsho/toggleterm.nvim'
	Plug 'jiangmiao/auto-pairs'

	Plug 'nvim-treesitter/nvim-treesitter', {'do': ':TSUpdate'}
	Plug 'tpope/vim-surround'
call plug#end()



 " Coc -- use <tab> for trigger completion and navigate to the next complete item
	function! s:check_back_space() abort
	  let col = col('.') - 1
	  return !col || getline('.')[col - 1]  =~ '\s'
	endfunction
" Coc refactor for react
	

	" inoremap <silent><expr> <Tab>
		  \ pumvisible() ? "\<C-n>" :
		  \ <SID>check_back_space() ? "\<Tab>" :
		  \ coc#refresh()

" Coc remaps for autocompletion with <tab>
	inoremap <expr> <Tab> pumvisible() ? "\<C-n>" : "\<Tab>"
	inoremap <expr> <S-Tab> pumvisible() ? "\<C-p> : "\<S-Tab>"

" Ultisnips expand trigger remap (to avoid collision with Coc)
	let g:UltiSnipsExpandTrigger='<f5>'
" keymaps for NerdTree
	nnoremap <C-t> :NERDTreeToggle<CR>

" keymaps for Tagbar
	nnoremap <F8> :TagbarToggle<CR>

" customization for NerdTree
	let g:NERDTreeDirArrowExpandable="+"
	let g:NERDTreeDirArrowCollapsible="-"

" Default value is clap
	let g:dashboard_default_executive='clap'

" Rafi colour scheme
	":colorscheme deus 
	":colorscheme dogrun
	 :colorscheme minimalist
	":colorscheme seoul256
	"colorscheme space-vim-dark

" airline-theme
	let g:airline_theme='raven'
	" favourites: 
		" raven  
		" angr
		" violet
		" distinguished
		" bubblegum
		" wombat
		" deus
" airline tabline
	let g:airline#extensions#tabline#enabled = 1

" CSS,SCSS language compatibility
	autocmd FileType scss setl iskeyword+=@-@

" toggleterm Terminal 
	" let g:toggleterm_terminal_mapping = '<C-g>'
	autocmd TermEnter term://*toggleterm#*
		  \ tnoremap <silent><c-g> <Cmd>exe v:count1 . "ToggleTerm"<CR>

	nnoremap <silent><c-g> <Cmd>exe v:count1 . "ToggleTerm"<CR>
	inoremap <silent><c-g> <Esc><Cmd>exe v:count1 . "ToggleTerm"<CR>

" prettier
command! -nargs=0 Prettier :call CocAction('runCommand', 'prettier.formatFile')
